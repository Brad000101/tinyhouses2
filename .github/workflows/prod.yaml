name: Deploy
on:
    push:
      branches:
        - master
jobs:
    deploy:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Install sshpass
          run: sudo apt-get install sshpass

        - name: Copy docker-compose.yml to droplet
          run: sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -r -o StrictHostKeyChecking=no ./src root@${{ secrets.DROPLET_IP }}:/tinyhousess/src
        - name: Copy docker-compose.yml to droplet
          run: sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -r -o StrictHostKeyChecking=no ./public root@${{ secrets.DROPLET_IP }}:/tinyhousess/public
        - name: Copy docker-compose.yml to droplet
          run: sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -r -o StrictHostKeyChecking=no ./package.json root@${{ secrets.DROPLET_IP }}:/tinyhousess/package.json
        - name: Copy docker-compose.yml to droplet
          run: sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -r -o StrictHostKeyChecking=no ./package-lock.json root@${{ secrets.DROPLET_IP }}:/tinyhousess/package-lock.json
        - name: Deploy
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.DROPLET_IP }}
            command_timeout: 20m
            username: root
            password: ${{ secrets.DROPLET_PASSWORD }}
            script: |
              set -e  # Exit immediately if a command exits with a non-zero status

              echo "Stopping existing process..."
              sudo pkill -f react &>/dev/null || true

              echo "Navigating to project directory..."
              cd /tinyhousess

              echo "Running npm install..."
              npm install

              echo "Starting application in the background..."
              # Use `npm start` in the background with nohup and disown
              # Redirect output to a log file for later inspection
              nohup npm run start > app.log 2>&1 &
              disown

              echo "Verifying application is running..."
              # Wait a moment for the process to start
              sleep 10

              # Check for the process. If it's not found, fail the step.
              if ! pgrep -f "npm run start"; then
                echo "Error: The application failed to start."
                echo "--- Remote Log File Contents ---"
                cat app.log
                exit 1
              fi

              echo "Deployment complete. Application is running."

             